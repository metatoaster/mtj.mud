#!/bin/env python2.5
# Copyright (c) 2007 Tommy Yu
# This software is released under the GPLv3

# Interactive controller for mtmud

from sys import stdout
from mtmud.mud import *
from mtmud.server import *
from mtmud.runner import *
try:
    import readline
except:
    pass

if __name__ == '__main__':
    def _parse_cmd(arg):
        x = arg.split(' ', 1)
        if len(x) > 1:
            return x
        else:
            return (arg, None)

    def start(arg=None):
        if not mudserv.isRunning():
            print 'Starting mudserv thread.'
            mudserv.start()
        else:
            print 'mudserv already started.'

    def stop(arg=None):
        if mudserv.isRunning():
            print 'Stopping mudserv...',
            stdout.flush()
            mudserv.stop()
            print 'done.'
        else:
            print 'mudserv not started.'

    def drive(arg=None):
        if not driver.isRunning():
            print 'Starting driver thread.'
            driver.start()
        else:
            print 'driver already driving.'

    def brake(arg=None):
        if driver.isRunning():
            print 'Stopping driver...',
            stdout.flush()
            driver.stop()
            print 'done.'
        else:
            print 'driver not driving.'

    def level(arg=None):
        if arg and arg.isdigit():
            level = int(arg)
            setLogLevel(level)
            print 'Log level set to %s' % logging.getLevelName(level)
        else:
            # XXX perhaps use the string identifiers for level id also
            print 'Usage: level <num>'

    def debug(arg=None):
        # lolhack
        global eval_mode
        if not eval_mode:
            print('Debug mode on.  Basic raw Python commands are now accepted.')
            print('To return to standard mudctrl mode, type "debug()" again.')
        eval_mode = not eval_mode
        if not eval_mode:
            return 'Debug mode off.'

    def quit(arg):
        # lolhack
        raise EOFError

    driver = MudDriver()
    mudserv = MudServerController(host=HOST, port=PORT)
    driver.add(mudserv)
    #mudserv.driver = driver
    active = True
    eval_mode = False
    prompts = {
        True: '>>> ',
        False: 'mudctrl> ',
    }
    root_server_cmd = {
         'start': start,
         'stop': stop,
         'quit': quit,
         'drive': drive,
         'brake': brake,
         'level': level,
         'debug()': debug,
         '': str,  # lolhack
    }

    print 'Starting mtmud interactive shell.'
    while active:
        try:
            # XXX might want to use code.InteractiveConsole
            _s = raw_input(prompts[eval_mode])
            if eval_mode:
                try:
                    print eval(_s)
                except:
                    exec _s
            else:
                args = _parse_cmd(_s)
                if args[0] in root_server_cmd:
                    root_server_cmd[args[0]](args[1])
                else:
                    print 'Invalid Command.'
        except EOFError:
            if eval_mode:
                eval_mode = False
            else:
                active = False
            print ''
        except KeyboardInterrupt:
            print('\nGot keyboard interrupt.'),
            if mudserv.isRunning():
                print('mudserv running, stopping...'),
                mudserv.stop()
                print 'done.'
            else:
                print('mudserv not running, terminating.')
                active = False
        except:
            print traceback.format_exc()
    # stop server if running
    stop()
    brake()

    # really quit.
    sys.exit()

